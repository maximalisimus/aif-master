

sed -i '/^#\s*\[multilib\]$/{N;s/^#\s*//gm}' /etc/pacman.conf

/dev/sdXX - Find to /boot mounted: 
lsblk -l -o NAME,TYPE,FSTYPE,SIZE,MOUNTPOINT | grep 'part\|lvm' | grep "boot" | awk '{print $1,$2,$3,$4}' | sed 's/\/.*//g' | sed 's/part //g' | tr -s ' ' | sed 's/ *$//' | tr ' ' '_' | sed 's/_/ /' | awk '{print "/dev/"$1,$2}'


[archlinuxcn]
Server = https://repo.archlinuxcn.org/$arch
 

os-prober to enable:

$ nano /etc/default/grub
GRUB_DISABLE_OS_PROBER=false


/etc/pacman.d/hooks/refind.hook
[Trigger]
Operation=Upgrade
Type=Package
Target=refind

[Action]
Description = Updating rEFInd on ESP
When=PostTransaction
Exec=/usr/bin/refind-install


/etc/pacman.d/hooks/systemd-boot.hook
[Trigger]
Type = Package
Operation = Upgrade
Target = systemd

[Action]
Description = Updating systemd-boot...
When = PostTransaction
Exec = /usr/bin/bootctl update






xdg-user-dir DESKTOP
xdg-user-dirs-update

bash:
mydesk=$(xdg-user-dir DESKTOP)
echo "${mydesk}"

fish:
set mydesk (xdg-user-dir DESKTOP)
echo "$mydesk"

arch_chroot() {
    arch-chroot $MOUNTPOINT /bin/bash -c "${1}"
}

$ cat ~/.config/user-dirs.dirs | grep -Ei "^xdg*" | cut -d "=" -f1 | sed 's/XDG_//g' | sed 's/_DIR//g'
DESKTOP
DOWNLOAD
TEMPLATES
PUBLICSHARE
DOCUMENTS
MUSIC
PICTURES
VIDEOS

$ xdg-user-dirs-update --set DOWNLOAD ~/Internet


XDG_DESKTOP_DIR="$HOME/Desktop"
XDG_DOWNLOAD_DIR="$HOME/Downloads"
XDG_TEMPLATES_DIR="$HOME/Templates"
XDG_PUBLICSHARE_DIR="$HOME/Public"
XDG_DOCUMENTS_DIR="$HOME/Documents"
XDG_MUSIC_DIR="$HOME/Music"
XDG_PICTURES_DIR="$HOME/Pictures"
XDG_VIDEOS_DIR="$HOME/Videos"






sudo pacman -S cups cups-pdf

По умолчанию файлы PDF хранятся в /var/spool/cups-pdf/имя_пользователя. 
Местоположение можно изменить в /etc/cups/cups-pdf.conf.

# Добавить локальный принтер - Cups-PDF
$ mkdir ~/cups-pdf
# Настраиваем конфиг
$ sudo nano /etc/cups/cups-pdf.conf
...
Out /home/mikl/cups-pdf/
...
TitlePref 1
...
DecodeHexStrings 1
...


http://localhost:631/

cups.service
cups.socket

При активации cups.socket и выключении cups.service, CUPS запускается только тогда, когда программа хочет его использовать.

Gutenprint Printer Drivers: Canon, Epson, Lexmark, Sony, Olympus, PCL.
sudo pacman -S gutenprint foomatic-db-gutenprint-ppds

Foomatic Printer Drivers.
Чтобы использовать foomatic, установите foomatic-db-engine и по крайней мере один из пакетов:
foomatic-db - коллекция файлов XML, используемая foomatic-db-engine для генерации файлов PPD.
foomatic-db-ppds - прекомпилированные файлы PPD.
foomatic-db-nonfree - коллекция файлов XML под несвободными лицензиями от производителей принтеров, используемая foomatic-db-engine для генерации файлов PPD.
foomatic-db-nonfree-ppds - прекомпилированные файлы PPD под несвободными лицензиями.

Инструмент для управления заданиями печати и принтерами (KDE):
print-manager

Инструмент настройки принтера GTK+ и апплет состояния (GNOME и другие):
system-config-printer

Настройки сервера CUPS находятся в /etc/cups/cupsd.conf и /etc/cups/cups-files.conf






cp -vf /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup

sudo pacman -S reflector
reflector --help
reflector —list-countries

sudo vim /etc/xdg/reflector/reflector.conf
--country 'YOUR COUNTRY','OR COUNTRIES'

sudo systemctl enable reflector.service reflector.timer
sudo systemctl start reflector.service reflector.timer

Следующая команда отфильтрует пять зеркал с поддержкой https, отсортирует их по скорости и обновит файл mirrorlist:
reflector --verbose -l 5 -p https --sort rate --save /etc/pacman.d/mirrorlist

Эта команда подробно выведет список 200 наиболее недавно обновленных HTTPS-зеркал, отсортирует их по скорости загрузки и обновит mirrorlist:
# reflector --verbose -l 200 -p https --sort rate --save /etc/pacman.d/mirrorlist

То же, что и в предыдущем примере, но будут взяты только зеркала, расположенные в Соединенных Штатах:
reflector --verbose --country 'United States' -l 200 -p https --sort rate --save /etc/pacman.d/mirrorlist







dialog --backtitle "$VERSION - $SYSTEM ($ARCHI)" --title "$_Title" --textbox ./mount-config2.txt 0 0





Отключаем аутентификацию на базе хоста, которая позволяет пользователю с определённого хоста подключаться к серверу:
HostbasedAuthentication no

Отключаем прямое подключение через root:
PermitRootLogin no

За настройку баннера отвечает параметр Banner

Запрещаем пустые пароли
PermitEmptyPasswords no

Изменяем порт по умолчанию. Обязательно запомните его. Он понадобится при настройке фаервола.
Port 962

Анализ логов, для расширенного контроля над системой:
LogLevel INFO

Отключаем пересылку X11 через ssh, т.к. данный протокол не ориентирован на безопасность.
X11Forwarding no




По умолчанию, все системные пользователи имеют возможность подключаться к системе по SSH. Например, разрешим SSH для пользователей root и networks:
AllowUsers root networks

Можно разрешить доступ всем, кроме указанных:
DenyUsers root networks

Выбранных пользователей можно добавить в группу и разрешить доступ только этой группе:
AllowGroups ssh_group


Сохраните файл и перезапустите sshd сервис:
$ sudo systemctl restart sshd



Команды UFW:

app list - список доступных имён приложений;
enable - включить фаерволл и добавить его в автозагрузку;
disable - отключить фаерволл и удалить его из автозагрузки;
reload - перезагрузить файервол;
status - посмотреть состояние фаервола;
show - посмотреть один из отчётов о работе;
allow - добавить разрешающее правило;
deny - добавить запрещающее правило;
reject - добавить отбрасывающее правило;
limit - добавить лимитирующее правило;
delete - удалить правило;
insert - вставить правило.

Например, чтобы открыть порт ufw для SSH, можно добавить одно из этих правил:

$: sudo ufw allow OpenSSH
$: sudo ufw allow 22
$: sudo ufw allow 22/tcp

Теперь необходимо активировать фаервол. Мне в archlinux для автоматического запуска при перезагрузки системы понадобилось выполнить ещё одну команду.

$: sudo ufw enable
$: sudo systemctl enable ufw



$: systemctl enable fail2ban
$: systemctl start fail2ban

Для начала создаем первый файл, в котором будут храниться настройки по умолчанию: /etc/fail2ban/jail.d/default.conf

[DEFAULT]
maxretry = 4
findtime = 480
bantime = 720
action = firewallcmd-ipset
ignoreip = 127.0.0.1/8
* где:

maxretry    —   количество действий, которые разрешено совершить до бана
findtime     —   время в секундах, в течение которого учитывается maxretry;
bantime     —   время, на которое будет блокироваться IP-адрес;
action        —   действия, которое будет выполняться, если Fail2ban обнаружит активность, соответствующую критериям поиска;
ignoreip     —   игнорировать защиту, если запросы приходят с перечисленных адресов.
* В данном примере, если в течение 8 минут (480) будет найдено 5 строк (maxretry = 4), содержащих критерий фильтра, Fail2ban заблокирует IP-адрес, с которого идет подключение на 12 минут (720);

* В секции [DEFAULT] хранятся общие настройки для всех правил. Каждую из настроек можно переопределить при конфигурировании самого правила.

Для нового правила необходимо создать конфигурационный файл в каталоге /etc/fail2ban/jail.d, например: /etc/fail2ban/jail.d/service.conf

[ssh]
enabled = true
port = ssh
filter = sshd
action = iptables[name=sshd, port=ssh, protocol=tcp]
logpath = /var/log/auth.log
maxretry = 10
findtime = 600

* где:

ssh — название для правила;
enabled позволяет быстро включать (true) или отключать (false) правило;
port — порт целевого сервиса. Принимается буквенное или цифирное обозначение;
filter — фильтр (критерий поиска), который будет использоваться для поиска подозрительных действий. По сути, это имя файла из каталога /etc/fail2ban/filter.d без .conf на конце;
action — действие, совершаемое в случае срабатывания правила. В квадратных скобках указаны название для правила, сетевой порт и протокол для блокирования;
logpath — расположение лог-файла, в котором фильтр будет искать подозрительную активность на основе описанных критериев.
* обратите внимание, что мы переопределили параметры по умолчанию maxretry, findtime и action.

Чтобы изменения вступили в силу, перезапускаем сервис:

$: systemctl restart fail2ban

Для гарантии, что fail2ban не заблокирут компьютер администратора или другой важный узел, предусмотрена настройка исключений с помощью опции ignoreip. Опция может быть применена как на глобальном уровне (default), так и для конкретного правила.

Для того, чтобы задать общую настроку, откроем наш файл default:

[DEFAULT]
...
ignoreip = 192.168.0.0/24 95.95.95.95

* в данном примере под фильтры не будут попадать адреса с 192.168.0.1 по 192.168.0.255 и адрес 95.95.95.95.

